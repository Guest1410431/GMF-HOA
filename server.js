var express = require('express');
var nodemailer = require('nodemailer');
var bodyParser = require('body-parser');
var sessions = require('express-session');
var cors = require('cors');
var mongoose = require('mongoose');
var errorHandler = require('errorhandler');

mongoose.promise = global.Promise;
const isProduction = process.env.NODE_ENV === 'production';

var session;
var app = express();

app.set('view engine', 'ejs');

app.use(cors())
app.use(require('morgan')('dev'))
app.use(express.static(__dirname + "/public"));
app.use('/assets', express.static(__dirname + "/public"));

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
    extended: false
}));
app.use(sessions({
    secret: '^&*KJHEe8euo38%@',
    cookie: { maxAge: 60000 },
    resave: false,
    saveUninitialized: false
}));

if(!isProduction){
     app.use(errorHandler());
}
mongoose.connect('mongoose://localhost/login');
mongoose.set('debug', true);

// Models and routes
//require('./models/users');
//require('./config/passport');
//app.use(require('./routes'))

//Page links
app.get('/', function(request, response) {
    response.render('index');
});
app.get('/documents', function(request, response) {
    response.render('documents', {
        title: "Documents and Minutes"
    });
});
app.get('/policies', function(request, response) {
    response.render('policies', {
        title: "Policies and Forms"
    });
});
app.get('/community', function(request, response) {
    response.render('community', {
        title: "Community"
    });
});
app.get('/about', function(request, response) {
    response.render('about', {
        title: "About Us"
    });
});
app.get('/newsletters', function(request, response) {
    response.render('newsletters', {
        title: "Newsletters"
    });
});

app.get('/login', function(request, response) {
    response.render('login', {
        title: "Log In"
    });
});

app.post('/contact', function(request, response) {
    //Validate Fields
    if (!request.body.name || !request.body.email || !request.body.message) {
        //Notify user that the field(s) are blank
        return;
    }
    var stmpTransport;

    stmpTransport = nodemailer.createTransport({
        service: 'Gmail',
        auth: {
            user: "1410431@gmail.com",
            pass: "Guest_1410431"
        }
    });
    stmpTransport.sendMail({
        from: request.body.email,
        to: "1410431@gmail.com",
        subject: "GMF HOA Website Contact",
        text: "The following is an autogenerated email.\n" + "\n" +
            "Formal Complaint From: " + request.body.name + "\n" +
            ((request.body.phonenumber != null) ? "Phone Number: " + request.body.phonenumber : "") + "\n" + "\n" +
            request.body.message
    });
});
app.post('/login', function(request, response) {
    if (request.body.username.toLowerCase() == 'username' && request.body.password == 'password') {
        request.session.uniqueID = request.body.username;
    }
    if (request.session.uniqueID) {
        response.redirect('/documents');
    }
    response.redirect('/redirects');
});

app.listen(8080, '0.0.0.0', function() {
    console.log("Connected successfully to port 8080")
});
